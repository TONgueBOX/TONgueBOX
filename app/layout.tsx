import type { Metadata } from "next";
import { Geist, Geist_Mono, Poppins, Pacifico } from "next/font/google";
import "./globals.css";
import { GlobalLoaderProvider } from "@/hooks/useGlobalLoader";
import { CoinsProvider } from "@/src/contexts/coinsContext";
import { serverFetch } from "@/src/lib/backendClient";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"]
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"]
});

const viceScript = Poppins({
  variable: "--font-vice",
  weight: ["400", "600"],
  subsets: ["latin"],
  display: "swap"
});

const pacifico = Pacifico({
  variable: "--font-pacifico",
  weight: "400",
  subsets: ["latin"],
  display: "swap"
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app"
};

async function getInitialCoins(): Promise<number | null> {
  try {
    const res = await serverFetch("User/GetCurrentCoins", { method: "GET" });
    const data = res.data as unknown;
    if (data == null) return null;
    if (typeof data === "number") return data;
    const obj = data as Record<string, unknown>;
    const candidate = obj.coins ?? obj.amount ?? obj.value;
    return typeof candidate === "number" ? candidate : null;
  } catch {
    return null;
  }
}

export default async function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  const initialCoins = await getInitialCoins();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${viceScript.variable} ${pacifico.variable} antialiased`}
      >
        <GlobalLoaderProvider>
          <CoinsProvider initialCoins={initialCoins}>{children}</CoinsProvider>
        </GlobalLoaderProvider>
      </body>
    </html>
  );
}
